name: Release

on:
  push:
    tags:
      - "milestone/*"

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-mingw-w64-x86-64

      - name: Get build info
        id: build_info
        run: |
          echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +%Y-%m-%d)" >> $GITHUB_OUTPUT
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binaries
        env:
          COMMIT_HASH: ${{ steps.build_info.outputs.commit_hash }}
          BUILD_DATE: ${{ steps.build_info.outputs.build_date }}
        run: |
          mkdir -p dist

          # macOS amd64
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 CC=o64-clang \
            go build -ldflags "-X main.Version=${COMMIT_HASH} -X main.BuildDate=${BUILD_DATE}" \
            -o dist/github-brain-darwin-amd64

          # macOS arm64
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=1 CC=oa64-clang \
            go build -ldflags "-X main.Version=${COMMIT_HASH} -X main.BuildDate=${BUILD_DATE}" \
            -o dist/github-brain-darwin-arm64

          # Linux amd64
          GOOS=linux GOARCH=amd64 CGO_ENABLED=1 \
            CGO_CFLAGS="-DSQLITE_ENABLE_FTS5" \
            go build -ldflags "-X main.Version=${COMMIT_HASH} -X main.BuildDate=${BUILD_DATE}" \
            -o dist/github-brain-linux-amd64

          # Linux arm64
          GOOS=linux GOARCH=arm64 CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc \
            CGO_CFLAGS="-DSQLITE_ENABLE_FTS5" \
            go build -ldflags "-X main.Version=${COMMIT_HASH} -X main.BuildDate=${BUILD_DATE}" \
            -o dist/github-brain-linux-arm64

          # Windows amd64
          GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc \
            CGO_CFLAGS="-DSQLITE_ENABLE_FTS5" \
            go build -ldflags "-X main.Version=${COMMIT_HASH} -X main.BuildDate=${BUILD_DATE}" \
            -o dist/github-brain-windows-amd64.exe

      - name: Create archives
        env:
          COMMIT_HASH: ${{ steps.build_info.outputs.commit_hash }}
        run: |
          cd dist

          # macOS archives
          tar -czf github-brain-${COMMIT_HASH}-darwin-amd64.tar.gz github-brain-darwin-amd64
          tar -czf github-brain-${COMMIT_HASH}-darwin-arm64.tar.gz github-brain-darwin-arm64

          # Linux archives
          tar -czf github-brain-${COMMIT_HASH}-linux-amd64.tar.gz github-brain-linux-amd64
          tar -czf github-brain-${COMMIT_HASH}-linux-arm64.tar.gz github-brain-linux-arm64

          # Windows archive
          zip github-brain-${COMMIT_HASH}-windows-amd64.zip github-brain-windows-amd64.exe

          # Clean up binaries
          rm github-brain-*-amd64 github-brain-*-arm64 github-brain-*.exe

      - name: Generate checksums
        run: |
          cd dist
          sha256sum *.tar.gz *.zip > SHA256SUMS.txt

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.build_info.outputs.tag_name }}
          body: |
            ## github-brain ${{ steps.build_info.outputs.commit_hash }}

            Built from commit `${{ steps.build_info.outputs.commit_hash }}` on ${{ steps.build_info.outputs.build_date }}

            ### Installation

            Download the appropriate binary for your platform:

            - **macOS (Intel)**: `github-brain-${{ steps.build_info.outputs.commit_hash }}-darwin-amd64.tar.gz`
            - **macOS (Apple Silicon)**: `github-brain-${{ steps.build_info.outputs.commit_hash }}-darwin-arm64.tar.gz`
            - **Linux (x86_64)**: `github-brain-${{ steps.build_info.outputs.commit_hash }}-linux-amd64.tar.gz`
            - **Linux (ARM64)**: `github-brain-${{ steps.build_info.outputs.commit_hash }}-linux-arm64.tar.gz`
            - **Windows (x86_64)**: `github-brain-${{ steps.build_info.outputs.commit_hash }}-windows-amd64.zip`

            Verify the download with `SHA256SUMS.txt`.

            ### Usage

            ```bash
            # Extract archive
            tar -xzf github-brain-*.tar.gz  # macOS/Linux
            # or
            unzip github-brain-*.zip        # Windows

            # Run
            ./github-brain --version
            ```
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/SHA256SUMS.txt
          draft: false
          prerelease: false
